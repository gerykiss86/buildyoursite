{
  "createdAt": "2025-09-13T21:48:24.389Z",
  "updatedAt": "2025-10-04T01:09:43.000Z",
  "id": "UP0MowU4xpBOOE9J",
  "name": "buildyoursite",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "command": "=echo \"{{ $json.stdout }}\" | grep 'Generated site saved in:' | sed 's/.*Generated site saved in: //' | tail -n1\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1440,
        -192
      ],
      "id": "711d8383-6c66-4ba3-bea1-0f738a57ac48",
      "name": "Parse output folder"
    },
    {
      "parameters": {
        "command": "=/tmp/ssh-exec.sh \"cd /git/buildyoursite/bolt-playwright && xvfb-run -a python3 generate-bolt-linux.py --headless \\\"{{ $json.emailContent }}\\\"\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1632,
        -192
      ],
      "id": "5c297da9-03c7-48c4-b58b-2c1e276fe2c4",
      "name": "Generate Site with Bolt"
    },
    {
      "parameters": {
        "command": "=/tmp/ssh-exec.sh \"echo '{\\\"prompt\\\":\\\"Follow these steps exactly and in order: 1) Change into the directory where the zip file {{ $json.stdout }} is located. 2) Run sudo unzip the zip file directly into this directory (do not use /tmp or any other location). This directory must remain the working folder for all subsequent steps. 3) Run sudo npm install if node_modules is missing, then sudo npm run build inside this working folder. 4) Perform a complete and strict quality audit of the site: - Parse every HTML, CSS, and JS file and collect every referenced asset (all images, logos, icons, fonts, stylesheets, and scripts). - For every image except the company logo, collect all <img> alt texts (or filenames if no alt) into a list of prompts, then run sudo python3 /git/buildyoursite/imagegen-nanobanana/generate_image_bulk.py \\\\\\\"prompt1\\\\\\\" \\\\\\\"prompt2\\\\\\\" \\\\\\\"prompt3\\\\\\\" ... using an extended timeout of at least 15 minutes (do not abort early). - Move generated files into /assets/images/ and update all references using sudo mv and sudo sed. - The company logo (identified by alt text containing 'logo' or by being used in header/footer) must NOT be replaced, only verified for visibility and styling. - Verify the logo in all places (header, footer, body) is visible and properly styled; adjust CSS (contrast, z-index, sizing, background) if needed. - Inspect CSS rules to ensure no text, logos, or images are hidden, clipped, or overlapping. - Confirm responsiveness across desktop and mobile breakpoints. Apply all fixes directly in the working folder and re-run sudo npm run build if needed. 5) Ensure the project is named properly: if the site, folder, or title contains 'New Chat' or similar placeholders, replace them everywhere (folder name, HTML <title>, metadata) with the correct company name in lowercase-hyphenated form. 6) Maintain a detailed fixes.log including all replacements, generated images, and renaming actions. 7) Deploy the build to /var/www/buildyoursite/ under a subfolder named after the company (e.g. andreas-kreiseder-demo), update nginx config, test with sudo nginx -t && sudo systemctl reload nginx, then verify via sudo curl for HTTP 200. 8) Output ONLY the final deployment URL in format https://subfolder.buildyoursite.pro with no extra text. 9) After that, append an additional structured JSON block named 'report' containing the site name, company name, deployment URL, and the list of all image generation prompts collected in step 4. This JSON must appear after the success message without altering it.\\\"}' | curl -s -X POST http://127.0.0.1:5555/execute -H 'Content-Type: application/json' --data-binary @-\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1232,
        -192
      ],
      "id": "9caabe66-0370-40a5-8da7-287711762056",
      "name": "Deploy site to with Claude"
    },
    {
      "parameters": {
        "command": "=echo '{{ $json.stdout }}' | grep -o '\"output\":\"[^\"]*\"' | sed 's/\"output\":\"\\(.*\\)\\\\n\"/\\1/'\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1024,
        -192
      ],
      "id": "67c258c8-bc77-4b5b-9466-53457659cee4",
      "name": "Extract website url"
    },
    {
      "parameters": {
        "postProcessAction": "nothing",
        "options": {}
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2.1,
      "position": [
        -2528,
        -176
      ],
      "id": "e3c1e374-8041-4458-b72b-67bff0ff0197",
      "name": "Email Trigger (IMAP)",
      "credentials": {
        "imap": {
          "id": "LstHLn7vReUThlYX",
          "name": "IMAP account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0ecfd31d-77f8-44ae-b45c-8df647d98853",
              "leftValue": "={{ $json.subject }}",
              "rightValue": "generate website",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2400,
        -176
      ],
      "id": "eee276b5-2764-4529-8d34-72146fe06529",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.httpsms.com/v1/messages/send",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-Key",
              "value": "81oCULOhIISW4z-RpbPIoVJhQ1avYDn8wFdpKK5TDS6OGU3e4fR5Ouz7U_cTvUi7"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "+436604330534"
            },
            {
              "name": "content",
              "value": "=Website {{ $('Extract website url').item.json.stdout }} has been created successfully. "
            },
            {
              "name": "from",
              "value": "+4367764306871"
            },
            {
              "name": "encrypted",
              "value": false
            },
            {
              "name": "request_id",
              "value": "=buildyoursite  {{ $('Extract website url').item.json.stdout }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        -272
      ],
      "id": "b387352a-7b5b-4c16-9eed-333075a391e4",
      "name": "SMS to Rami"
    },
    {
      "parameters": {
        "fromEmail": "admin@kiss-it.io",
        "toEmail": "office@buildyoursite.pro",
        "subject": "=Website {{ $json.stdout }} has been created succesfully!",
        "html": "=The website {{ $json.stdout }} has been created succesfully!",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -816,
        -192
      ],
      "id": "9ac92596-1f04-42b1-ae12-439310b14f9e",
      "name": "Send email to office",
      "webhookId": "03c86e70-e0eb-43c1-9cbe-69698d760dcb",
      "credentials": {
        "smtp": {
          "id": "FkWu3oDMknM72J47",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.httpsms.com/v1/messages/send",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-Key",
              "value": "81oCULOhIISW4z-RpbPIoVJhQ1avYDn8wFdpKK5TDS6OGU3e4fR5Ouz7U_cTvUi7"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "+436645033757"
            },
            {
              "name": "content",
              "value": "=Website {{ $('Extract website url').item.json.stdout }} has been created successfully."
            },
            {
              "name": "from",
              "value": "+4367764306871"
            },
            {
              "name": "encrypted",
              "value": false
            },
            {
              "name": "request_id",
              "value": "=buildyoursite {{ $('Extract website url').item.json.stdout }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        -64
      ],
      "id": "2f5b4d2d-2db9-4f4c-bdce-1e6a9e7a9282",
      "name": "SMS to Gery"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -320,
        -160
      ],
      "id": "e199a178-559e-4ea7-8a6b-8abd2770317e",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0357e700-7542-48cb-85fa-2fc688e4180c",
              "name": "emailContent",
              "value": "={{\n  (\n    $('Email Trigger (IMAP)').item.json.textPlain ||\n    ($('Email Trigger (IMAP)').item.json.textHtml &&\n      $('Email Trigger (IMAP)').item.json.textHtml.replace(/<[^>]+>/g, '')\n    ) ||\n    ''\n  )\n  // remove HTML tags\n  .replace(/<[^>]+>/g, '')\n  // keep only letters, numbers, punctuation, space and newlines\n  .replace(/[^A-Za-z0-9\u00c0-\u017e.,:;!?@%+\\-_=\\/\\s\\r\\n]/g, '')\n  // collapse extra spaces but preserve line breaks\n  .replace(/[ \\t]{2,}/g, ' ')\n  .replace(/\\r?\\n{3,}/g, '\\n\\n')\n  .trim()\n}}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1824,
        -192
      ],
      "id": "f50d051f-e1ca-414b-b195-8a8b9288c232",
      "name": "Prepare Email Text"
    },
    {
      "parameters": {
        "command": "/tmp/ssh-exec.sh \"killall -q -9 -r bolt-playwright || true\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -2144,
        -192
      ],
      "id": "bf498e8b-44b0-4344-9f18-36464dade6f1",
      "name": "Clean up bolt-playwright processes"
    },
    {
      "parameters": {
        "command": "/tmp/ssh-exec.sh \"killall -q -9 -r claude || true\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1968,
        -192
      ],
      "id": "02ba0a6b-7a14-4acf-a898-41cfccc1533a",
      "name": "Clean up claude processes"
    }
  ],
  "connections": {
    "Parse output folder": {
      "main": [
        [
          {
            "node": "Deploy site to with Claude",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Site with Bolt": {
      "main": [
        [
          {
            "node": "Parse output folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deploy site to with Claude": {
      "main": [
        [
          {
            "node": "Extract website url",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract website url": {
      "main": [
        [
          {
            "node": "Send email to office",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Clean up bolt-playwright processes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SMS to Rami": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send email to office": {
      "main": [
        [
          {
            "node": "SMS to Rami",
            "type": "main",
            "index": 0
          },
          {
            "node": "SMS to Gery",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SMS to Gery": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prepare Email Text": {
      "main": [
        [
          {
            "node": "Generate Site with Bolt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean up bolt-playwright processes": {
      "main": [
        [
          {
            "node": "Clean up claude processes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean up claude processes": {
      "main": [
        [
          {
            "node": "Prepare Email Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Email Trigger (IMAP)": {
      "lastMessageUid": 91
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "82586768-30a5-4d7b-82fd-67923ca2d30c",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-13T21:48:24.395Z",
      "updatedAt": "2025-09-13T21:48:24.395Z",
      "role": "workflow:owner",
      "workflowId": "UP0MowU4xpBOOE9J",
      "projectId": "Bmx42dy6FosAFc4s",
      "project": {
        "createdAt": "2025-09-13T20:12:35.790Z",
        "updatedAt": "2025-09-13T20:48:35.157Z",
        "id": "Bmx42dy6FosAFc4s",
        "name": "Gergo Kiss <info@kiss-it.io>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-13T20:12:35.790Z",
            "updatedAt": "2025-09-13T20:12:35.790Z",
            "userId": "90ad8501-be0e-4a3d-a072-6b80b9b3575a",
            "projectId": "Bmx42dy6FosAFc4s",
            "user": {
              "createdAt": "2025-09-13T20:12:35.525Z",
              "updatedAt": "2025-10-04T07:45:18.000Z",
              "id": "90ad8501-be0e-4a3d-a072-6b80b9b3575a",
              "email": "info@kiss-it.io",
              "firstName": "Gergo",
              "lastName": "Kiss",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-13T20:50:08.387Z",
                "personalization_survey_n8n_version": "1.110.1",
                "automationGoalDevops": [
                  "other"
                ],
                "automationGoalDevopsOther": "AI agents",
                "companySize": "<20",
                "companyType": "saas",
                "role": "it",
                "reportedSource": "event"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "UP0MowU4xpBOOE9J",
                "userActivatedAt": 1758571955108,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759005816463
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-04",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}